#######################
## SAWTOOTH COMMANDS ##
#######################

## Start Sawtooth services
sudo systemctl start sawtooth-validator sawtooth-rest-api sawtooth-settings-tp sawtooth-identity-tp

## Confirm Sawtooth services started successfully
sudo journalctl -f -u sawtooth-validator -u sawtooth-rest-api -u sawtooth-settings-tp -u sawtooth-identity-tp

################################################################################

## Grant yourself access
sawset proposal create --key ~/.sawtooth/keys/sawtooth.priv --url http://0.0.0.0:8008 sawtooth.identity.allowed_keys=`cat ~/.sawtooth/keys/sawtooth.pub`

## Echo your public key for granting yourself access via identity policy
cat ~/.sawtooth/keys/sawtooth.pub

## Add an identity policy for yourself
sawtooth identity policy create --key ~/.sawtooth/keys/sawtooth.priv --url http://0.0.0.0:8008 permitted_clients "PERMIT_KEY __PUBLIC_KEY_OF_LOCAL_USER__"

## Add permitted clients to a transactor role to give them transactor permissions
sawtooth identity role create --key ~/.sawtooth/keys/sawtooth.priv --url http://0.0.0.0:8008 transactor permitted_clients

## Add policies for yourself and all other permitted clients
## Note that this overwrites any existing policies with the same name
## If you forget to add your own public key here, you will lock yourself out
sawtooth identity policy create --key ~/.sawtooth/keys/sawtooth.priv --url http://0.0.0.0:8008 permitted_clients "PERMIT_KEY __PUBLIC_KEY_OF_LOCAL_USER__" "PERMIT_KEY __PUBLIC_KEY_OF_FIRST_CLIENT__" "PERMIT_KEY __PUBLIC_KEY_OF_SECOND_CLIENT__"

# get validator keys (different than user keys)
sudo cat /etc/sawtooth/keys/validator.pub

## Add permitted nodes
sawtooth identity policy create --key ~/.sawtooth/keys/sawtooth.priv --url http://0.0.0.0:8008 permitted_nodes "PERMIT_KEY __PUBLIC_KEY_OF_LOCAL_VALIDATOR__"

## create a network role for permitted nodes
sawtooth identity role create --key ~/.sawtooth/keys/sawtooth.priv --url http://0.0.0.0:8008 network permitted_nodes

## Add policies for yourself and all other permitted nodes
## Note that this overwrites any existing policies with the same name
## If you forget to add your validator's public key here, you will lock yourself out
sawtooth identity policy create --key ~/.sawtooth/keys/sawtooth.priv --url http://0.0.0.0:8008 permitted_clients "PERMIT_KEY __PUBLIC_KEY_OF_LOCAL_VALIDATOR__" "PERMIT_KEY __PUBLIC_KEY_OF_FIRST_PEER_VALIDATOR__" "PERMIT_KEY __PUBLIC_KEY_OF_SECOND_PEER_VALIDATOR__"

## list all roles
sawtooth identity role list

## list all policies (if this command doesn't error out, that is)
sawtooth identity policy list

################################################################################

## Long-run the intkey transaction processor with pm2
cd ~/intkey-tp-js && pm2 start index.js && cd ~

## Long-run the proxy with pm2
cd ~/sawtooth-rest-api-proxy && pm2 start index.js && cd ~

################################################################################

## Set up the Node intkey transactor client
# Generate public/private keys and a placeholder Sawtooth validator URL
# Run as node because it doesn't have permission to write to my folder for some reason
# Maybe because cloud-init installed it rather than the sawtooth user
cd ~/intkey-client-js && sudo node init.js

# View your public key (and other stuff, but we really care about the public key)
cat .env

# Add the public key of your transactor client as an authorized client
# Be sure to add any other authorized clients, as well as the local sawtooth user's
# public key, or else they won't have access (and/or you'll lock yourself out)
sawtooth identity policy create --key ~/.sawtooth/keys/sawtooth.priv --url http://0.0.0.0:8008 permitted_clients "PERMIT_KEY __PUBLIC_KEY_OF_LOCAL_USER__" "PERMIT_KEY __PUBLIC_KEY_OF_FIRST_CLIENT__" "PERMIT_KEY __PUBLIC_KEY_OF_SECOND_CLIENT__" "PERMIT_KEY __PUBLIC_KEY_OF_INTKEY_CLIENT__"

## Create a new value
node index.js --name foo --verb set --value 42

## Change that value
node index.js --name foo --verb inc --value 13

################################################################################

## Get your public key for adding to GitHub
cat ~/.ssh/id_rsa.pub

## Copy/paste the output from the command above into a new deploy key for your transaction processor's GitHub repo

## Clone your transaction processor repo
cd ~ && git clone git@github.com:__YOUR_TRANSACTION_PROCESSOR_GITHUB_REPO__.git

## Build your transaction processor
cd ~/__YOUR_TRANSACTION_PROCESSOR_REPO_NAME__/ && npm install && cd ~

## Test some transactions
## Create a batch of intkey transactions
intkey create_batch

## Load that intkey batch onto the blockchain
intkey load

## See those hot, hot blocks
sawtooth block list

################################################################################
################################################################################

#############################
## PLACEHOLDERS TO REPLACE ##
#############################

## __PUBLIC_KEY_OF_PERMITTED_DEVICE__ - The public key of the transaction processor or whatever you want to allow
## __YOUR_TRANSACTION_PROCESSOR_GITHUB_REPO__ - the user/repo GitHub path to your transaction processor repo (e.g. thegreatsunra/awesome-sawtooth-tp)
## __YOUR_TRANSACTION_PROCESSOR_REPO_NAME__ - the name (e.g. folder name) of your transaction processor (e.g. awesome-sawtooth-tp)
